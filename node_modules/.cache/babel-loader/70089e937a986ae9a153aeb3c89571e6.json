{"ast":null,"code":"import axios from \"axios\";\nconst GET_POKEMONS = \"GET_POKEMONS\";\nconst GET_TYPES = \"GET_TYPES\";\nconst GET_DETAIL = \"GET_DETAIL\";\nconst FILTER_TYPE = \"FILTER_TYPE\";\nconst FILTER_NAME = \"FILTER_NAME\";\nconst FILTER_ORIGIN = \"FILTER_ORIGIN\";\nconst FILTER_ATTACK = \"FILTER_ATTACK\";\nconst GET_POKENAME = \"GET_POKENAME\";\nconst CLEAN_POKEMONS = \"CLEAN_POKEMONS\";\nexport function getPokemons() {\n  return dispatch => {\n    return axios.get(\"http://localhost:3001/pokemons\").then(r => dispatch({\n      type: GET_POKEMONS,\n      payload: r.data\n    }));\n  };\n}\nexport function getPokemonName(name) {\n  return async function (dispatch) {\n    try {\n      let poke = await axios.get(`http://localhost:3001/pokemons/?name=${name}`);\n      return dispatch({\n        type: GET_POKENAME,\n        payload: poke.data\n      });\n    } catch (err) {\n      console.log(err.response.data);\n    }\n  };\n}\nexport function getPokemonById(id) {\n  return async function (dispatch) {\n    try {} catch (err) {\n      console.log(err.response.data);\n    }\n  };\n}\nexport function getTypes() {\n  return dispatch => {\n    return axios.get(\"http://localhost:3001/types\").then(r => dispatch({\n      type: GET_TYPES,\n      payload: r.data\n    }));\n  };\n}\nexport function filterType(type) {\n  return {\n    type: FILTER_TYPE,\n    payload: type\n  };\n}\nexport function filterOrigin(origin) {\n  return {\n    type: FILTER_ORIGIN,\n    payload: origin\n  };\n}\nexport function filterName(order) {\n  return {\n    type: FILTER_NAME,\n    payload: order\n  };\n}\nexport function filterAttack(order) {\n  return {\n    type: FILTER_ATTACK,\n    payload: order\n  };\n}\nexport function cleanPokemons() {\n  return {\n    type: CLEAN_POKEMONS,\n    payload: {}\n  };\n}","map":{"version":3,"names":["axios","GET_POKEMONS","GET_TYPES","GET_DETAIL","FILTER_TYPE","FILTER_NAME","FILTER_ORIGIN","FILTER_ATTACK","GET_POKENAME","CLEAN_POKEMONS","getPokemons","dispatch","get","then","r","type","payload","data","getPokemonName","name","poke","err","console","log","response","getPokemonById","id","getTypes","filterType","filterOrigin","origin","filterName","order","filterAttack","cleanPokemons"],"sources":["C:/Users/tutem/Desktop/PI-Pokemon-main/client/src/redux/actions.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst GET_POKEMONS = \"GET_POKEMONS\";\r\nconst GET_TYPES = \"GET_TYPES\";\r\nconst GET_DETAIL = \"GET_DETAIL\";\r\nconst FILTER_TYPE = \"FILTER_TYPE\";\r\nconst FILTER_NAME = \"FILTER_NAME\";\r\nconst FILTER_ORIGIN = \"FILTER_ORIGIN\";\r\nconst FILTER_ATTACK = \"FILTER_ATTACK\";\r\nconst GET_POKENAME = \"GET_POKENAME\";\r\nconst CLEAN_POKEMONS = \"CLEAN_POKEMONS\";\r\n \r\nexport function getPokemons(){\r\n    return (dispatch)=>{\r\n    return axios.get(\"http://localhost:3001/pokemons\")\r\n    .then(r=>dispatch({type: GET_POKEMONS, payload: r.data}))\r\n}\r\n}\r\n\r\nexport function getPokemonName(name){\r\n    return async function(dispatch){\r\n        try{\r\n            let poke = await axios.get(`http://localhost:3001/pokemons/?name=${name}`)\r\n            return dispatch({type: GET_POKENAME, payload: poke.data})\r\n        }catch(err){\r\n            console.log(err.response.data);\r\n        }\r\n    }\r\n}\r\n\r\nexport function getPokemonById(id){\r\n    return async function(dispatch){\r\n        try{\r\n\r\n        }catch(err){\r\n            console.log(err.response.data)\r\n        }\r\n    }\r\n}\r\n\r\nexport function getTypes(){\r\n    return (dispatch)=>{\r\n    return axios.get(\"http://localhost:3001/types\")\r\n    .then(r=>dispatch({type: GET_TYPES, payload: r.data}))\r\n}\r\n}\r\n\r\nexport function filterType(type){\r\n    return{type: FILTER_TYPE, payload: type}\r\n}\r\n\r\nexport function filterOrigin(origin){\r\n    return{type: FILTER_ORIGIN, payload: origin}\r\n}\r\n\r\nexport function filterName(order){\r\n    return{type: FILTER_NAME, payload: order}\r\n}\r\n\r\nexport function filterAttack(order){\r\n    return{type: FILTER_ATTACK, payload: order}\r\n}\r\n\r\nexport function cleanPokemons(){\r\n    return {type: CLEAN_POKEMONS, payload: {}}\r\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG,cAArB;AACA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,UAAU,GAAG,YAAnB;AACA,MAAMC,WAAW,GAAG,aAApB;AACA,MAAMC,WAAW,GAAG,aAApB;AACA,MAAMC,aAAa,GAAG,eAAtB;AACA,MAAMC,aAAa,GAAG,eAAtB;AACA,MAAMC,YAAY,GAAG,cAArB;AACA,MAAMC,cAAc,GAAG,gBAAvB;AAEA,OAAO,SAASC,WAAT,GAAsB;EACzB,OAAQC,QAAD,IAAY;IACnB,OAAOX,KAAK,CAACY,GAAN,CAAU,gCAAV,EACNC,IADM,CACDC,CAAC,IAAEH,QAAQ,CAAC;MAACI,IAAI,EAAEd,YAAP;MAAqBe,OAAO,EAAEF,CAAC,CAACG;IAAhC,CAAD,CADV,CAAP;EAEH,CAHG;AAIH;AAED,OAAO,SAASC,cAAT,CAAwBC,IAAxB,EAA6B;EAChC,OAAO,gBAAeR,QAAf,EAAwB;IAC3B,IAAG;MACC,IAAIS,IAAI,GAAG,MAAMpB,KAAK,CAACY,GAAN,CAAW,wCAAuCO,IAAK,EAAvD,CAAjB;MACA,OAAOR,QAAQ,CAAC;QAACI,IAAI,EAAEP,YAAP;QAAqBQ,OAAO,EAAEI,IAAI,CAACH;MAAnC,CAAD,CAAf;IACH,CAHD,CAGC,OAAMI,GAAN,EAAU;MACPC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,QAAJ,CAAaP,IAAzB;IACH;EACJ,CAPD;AAQH;AAED,OAAO,SAASQ,cAAT,CAAwBC,EAAxB,EAA2B;EAC9B,OAAO,gBAAef,QAAf,EAAwB;IAC3B,IAAG,CAEF,CAFD,CAEC,OAAMU,GAAN,EAAU;MACPC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,QAAJ,CAAaP,IAAzB;IACH;EACJ,CAND;AAOH;AAED,OAAO,SAASU,QAAT,GAAmB;EACtB,OAAQhB,QAAD,IAAY;IACnB,OAAOX,KAAK,CAACY,GAAN,CAAU,6BAAV,EACNC,IADM,CACDC,CAAC,IAAEH,QAAQ,CAAC;MAACI,IAAI,EAAEb,SAAP;MAAkBc,OAAO,EAAEF,CAAC,CAACG;IAA7B,CAAD,CADV,CAAP;EAEH,CAHG;AAIH;AAED,OAAO,SAASW,UAAT,CAAoBb,IAApB,EAAyB;EAC5B,OAAM;IAACA,IAAI,EAAEX,WAAP;IAAoBY,OAAO,EAAED;EAA7B,CAAN;AACH;AAED,OAAO,SAASc,YAAT,CAAsBC,MAAtB,EAA6B;EAChC,OAAM;IAACf,IAAI,EAAET,aAAP;IAAsBU,OAAO,EAAEc;EAA/B,CAAN;AACH;AAED,OAAO,SAASC,UAAT,CAAoBC,KAApB,EAA0B;EAC7B,OAAM;IAACjB,IAAI,EAAEV,WAAP;IAAoBW,OAAO,EAAEgB;EAA7B,CAAN;AACH;AAED,OAAO,SAASC,YAAT,CAAsBD,KAAtB,EAA4B;EAC/B,OAAM;IAACjB,IAAI,EAAER,aAAP;IAAsBS,OAAO,EAAEgB;EAA/B,CAAN;AACH;AAED,OAAO,SAASE,aAAT,GAAwB;EAC3B,OAAO;IAACnB,IAAI,EAAEN,cAAP;IAAuBO,OAAO,EAAE;EAAhC,CAAP;AACH"},"metadata":{},"sourceType":"module"}