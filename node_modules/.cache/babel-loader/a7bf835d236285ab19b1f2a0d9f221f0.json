{"ast":null,"code":"import axios from \"axios\";\nconst backUrl = \"pokemonapp-backend-production.up.railway.app\";\nconst GET_POKEMONS = \"GET_POKEMONS\";\nconst GET_TYPES = \"GET_TYPES\";\nconst GET_DETAIL = \"GET_DETAIL\";\nconst FILTER_TYPE = \"FILTER_TYPE\";\nconst FILTER_NAME = \"FILTER_NAME\";\nconst FILTER_ORIGIN = \"FILTER_ORIGIN\";\nconst FILTER_ATTACK = \"FILTER_ATTACK\";\nconst GET_POKENAME = \"GET_POKENAME\";\nconst CLEAN_POKEMONS = \"CLEAN_POKEMONS\";\nconst CLEAN_DETAIL = \"CLEAN_DETAIL\";\nconst LOADER_FALSE = \"LOADER_FALSE\";\nexport function getPokemons() {\n  return dispatch => {\n    return axios.get(`${backUrl}/pokemons`).then(r => dispatch({\n      type: GET_POKEMONS,\n      payload: r.data\n    }));\n  };\n}\nexport function getPokemonName(name) {\n  return async function (dispatch) {\n    try {\n      let poke = await axios.get(`${backUrl}/pokemons/?name=${name}`);\n      return dispatch({\n        type: GET_POKENAME,\n        payload: poke.data\n      });\n    } catch (err) {\n      dispatch({\n        type: LOADER_FALSE,\n        payload: false\n      });\n    }\n  };\n}\nexport function getPokemonById(id) {\n  return async function (dispatch) {\n    try {\n      let poke = await axios.get(`${backUrl}/pokemons/${id}`);\n      return dispatch({\n        type: GET_DETAIL,\n        payload: poke.data\n      });\n    } catch (err) {\n      console.log(err.response.data);\n    }\n  };\n}\nexport function getTypes() {\n  return dispatch => {\n    return axios.get(`${backUrl}/types`).then(r => dispatch({\n      type: GET_TYPES,\n      payload: r.data\n    }));\n  };\n}\nexport function filterType(type) {\n  return {\n    type: FILTER_TYPE,\n    payload: type\n  };\n}\nexport function filterOrigin(origin) {\n  return {\n    type: FILTER_ORIGIN,\n    payload: origin\n  };\n}\nexport function filterName(order) {\n  return {\n    type: FILTER_NAME,\n    payload: order\n  };\n}\nexport function filterAttack(order) {\n  return {\n    type: FILTER_ATTACK,\n    payload: order\n  };\n}\nexport function cleanPokemons() {\n  return {\n    type: CLEAN_POKEMONS,\n    payload: {}\n  };\n}\nexport function cleanDetail() {\n  return {\n    type: CLEAN_DETAIL,\n    payload: {}\n  };\n}\nexport function postPokemon(data) {\n  return async function (dispatch) {\n    const post = await axios.post(`${backUrl}/pokemons`, data);\n    return post;\n  };\n}","map":{"version":3,"names":["axios","backUrl","GET_POKEMONS","GET_TYPES","GET_DETAIL","FILTER_TYPE","FILTER_NAME","FILTER_ORIGIN","FILTER_ATTACK","GET_POKENAME","CLEAN_POKEMONS","CLEAN_DETAIL","LOADER_FALSE","getPokemons","dispatch","get","then","r","type","payload","data","getPokemonName","name","poke","err","getPokemonById","id","console","log","response","getTypes","filterType","filterOrigin","origin","filterName","order","filterAttack","cleanPokemons","cleanDetail","postPokemon","post"],"sources":["D:/Projects/DeployPoke/client/src/redux/actions.js"],"sourcesContent":["import axios from \"axios\";\r\nconst backUrl = \"pokemonapp-backend-production.up.railway.app\"\r\nconst GET_POKEMONS = \"GET_POKEMONS\";\r\nconst GET_TYPES = \"GET_TYPES\";\r\nconst GET_DETAIL = \"GET_DETAIL\";\r\nconst FILTER_TYPE = \"FILTER_TYPE\";\r\nconst FILTER_NAME = \"FILTER_NAME\";\r\nconst FILTER_ORIGIN = \"FILTER_ORIGIN\";\r\nconst FILTER_ATTACK = \"FILTER_ATTACK\";\r\nconst GET_POKENAME = \"GET_POKENAME\";\r\nconst CLEAN_POKEMONS = \"CLEAN_POKEMONS\";\r\nconst CLEAN_DETAIL = \"CLEAN_DETAIL\";\r\nconst LOADER_FALSE = \"LOADER_FALSE\";\r\n \r\nexport function getPokemons(){\r\n    return (dispatch)=>{\r\n    return axios.get(`${backUrl}/pokemons`)\r\n    .then(r=>dispatch({type: GET_POKEMONS, payload: r.data}))\r\n}\r\n}\r\n\r\nexport function getPokemonName(name){\r\n    return async function(dispatch){\r\n        try{\r\n            let poke = await axios.get(`${backUrl}/pokemons/?name=${name}`)\r\n            return dispatch({type: GET_POKENAME, payload: poke.data})\r\n        }catch(err){\r\n            dispatch({type: LOADER_FALSE, payload: false})\r\n        }\r\n    }\r\n}\r\n\r\nexport function getPokemonById(id){\r\n    return async function(dispatch){\r\n        try{\r\n            let poke =  await axios.get(`${backUrl}/pokemons/${id}`)\r\n            return dispatch({type: GET_DETAIL, payload: poke.data})\r\n        }catch(err){\r\n            console.log(err.response.data)\r\n        }\r\n    }\r\n}\r\n\r\nexport function getTypes(){\r\n    return (dispatch)=>{\r\n    return axios.get(`${backUrl}/types`)\r\n    .then(r=>dispatch({type: GET_TYPES, payload: r.data}))\r\n}\r\n}\r\n\r\nexport function filterType(type){\r\n    return{type: FILTER_TYPE, payload: type}\r\n}\r\n\r\nexport function filterOrigin(origin){\r\n    return{type: FILTER_ORIGIN, payload: origin}\r\n}\r\n\r\nexport function filterName(order){\r\n    return{type: FILTER_NAME, payload: order}\r\n}\r\n\r\nexport function filterAttack(order){\r\n    return{type: FILTER_ATTACK, payload: order}\r\n}\r\n\r\nexport function cleanPokemons(){\r\n    return {type: CLEAN_POKEMONS, payload: {}}\r\n}\r\n\r\nexport function cleanDetail(){\r\n    return {type: CLEAN_DETAIL, payload: {}}\r\n}\r\n\r\nexport function postPokemon(data){\r\n    return async function(dispatch){\r\n        const post = await axios.post(`${backUrl}/pokemons`,data)\r\n        return post;\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}